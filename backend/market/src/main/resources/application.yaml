spring:
  security:
    user:
      name: user
      password: 1234
    oauth2:
      client:
        registration:
          google:
            client-id: 620088788781-s6kjlbtif0o8b56ocu0ubu1b0k82otvb.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          facebook:
            client-id: 674000320437819
            client-secret:
          naver:
            client-id: wvdcnFMKkinaBAmjCp9H
            client-secret: VOBB1gHM32
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}" # (== http://localhost:8080/login/oauth2/code/naver)
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri : https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  datasource:
    username: home
    password: 1234
    url: jdbc:mysql://localhost:3306/market
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        alect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
        show_sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

logging.level:
  org.hibernate.SQL: debug



